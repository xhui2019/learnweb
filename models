模型和数据库
====
models模型字段类型说明：
AutoField：自动增量，32位整型
BigAutoField：自动增量，64位整型
BigIntergerField：64位整数，取值范围：-2**63 到 2**63-1，字段默认表单控件为TextInput
BinaryField：储存元素二进制数据
BoolField：储存True或者False，字段的默认表单控件为CheckboxInput
CharField：储存字符串。字段的默认表单控件为TextInput
DataField：储存日期，字段值为datatime.data。字段默认表单控件为TextInput
DataTimeField：储存日期时间，字段值为datatime.data。字段默认表单控件为TextInput
DateField
日期，与python里的datetime.date 实例同。有以下几个可选的选项，均为bool类型： 
DateField.auto_now: 每次执行 save 操作的时候自动记录当前时间，常作为最近一次修改的时间 使用。注意：总是在执行save 操作的时候执行，无法覆盖。 
DateField.auto_now_add: 第一次创建的时候添加当前时间。常作为 创建时间 使用。注意：每次create 都会调用。 
默认的form widget 是 TextInput。 
注意：设置auto_now 或者 auto_now_add 为 True 会导致当前自动拥有 editable=False 和 blank = True 设置。

8、DateTimeField([auto_now=False, auto_now_add=False, **options])
日期+时间。与python里的 datetime.datetime 实例同。常用附加选项和DateField一样。 
默认 form widget 是一个 TextInput

9、DecimalField（max_digits=None，decimal_places=None[, **options]）
用decimal实例表示固定精度的十进制数的字段，有两个必须参数，max_digits数字允许的最大位数，decimal_places小数的最大位数。django后台用表示该字段， 通常用来表示金额

10、EmailField([maxlength=75, **options])
在 CharField 基础上附加了 邮件地址合法性验证。不需要强制设定 max_length 
注意：当前默认设置 max_length 是 75，虽然已经不符合标准，但未了向前兼容，未修改。

11、FileField(upload_to=None[, max_length=100, **options])
文件上传字段。不支持 primary_key 和 unique 选项。否则会报 TypeError 异常。 
必须设置 FileField.upload_to 选项，这个是 本地文件系统路径，附加在 MEDIA_ROOT 设置的后边，也就是 MEDIA_ROOT 下的子目录相对路径。默认的form widget 是 FileInput。

12、FloatField
与 python 里的 float 实例相同，默认的 form widget 是 TextInput。 
虽然 FloatField 与 DecimalField 都是表示实数，但却是不同的表现形式，FloatField 用的是 python d float 类型，但是 DecimalField 用的却是 Decimal 类型。区别可见：http://docs.python.org/2.7/library/decimal.html#decimal

13、ImageField([upload_to=None, height_field=None, width_field=None, max_length=100, **options])
在 FileField 基础上加上是否是合法图片验证功能的一个类型。 
除了 FileField 有的属性外，ImageField 另有 height 和 width 属性。 
注意：需要安装 PIL 或者 Pillow 模块。在数据库中同样表现为 varchar(100)，可通过 max_length 改大小。

IntegerField
整数，默认的form widget 是 TextInput。

IPAddressField
IP地址，字符串类型，如 127.0.0.1。默认 form widget 是 TextInput。

GenericIPAddressField
ip v4和ip v6地址表示，ipv6遵循RFC 4291section 2.2,

NullBooleanField
可以包含空值的布尔类型，相当于设置了null=True的BooleanField。

PositiveSmallIntegerField
正短整数或0类型，类似于PositiveIntegerField，取值范围依赖于数据库特性，[0 ,32767]的取值范围对Django所支持的数据库都是安全的。

PositiveIntegerField
正整数或0类型，取值范围为[0 ,2147483647]

SlugField
只能包含字母，数字，下划线和连字符的字符串，通常被用于URLs表示。可选参数max_length=50，prepopulate_from用于指示在admin表单中的可选值。db_index，默认为True。

SmallIntegerField
小整数字段，类似于IntegerField，取值范围依赖于数据库特性，[-32768 ,32767]的取值范围对Django所支持的数据库都是安全的。

TextField
大文本，巨长的文本。默认的 form widget 是 Textarea。

TimeField
时间，对应Python的datetime.time

URLField
加了 URL 合法性验证的 CharField。 
默认的 form widget 是 TextInput。 
默认max_length=200，可修改。

FilePathField(path=None[, match=None, recursive=False, max_length=100， options])
他是一个CharField，用来选择文件系统下某个目录里面的某些文件，它有三个专有参数，只有path是必须的。path是一个目录的绝对路径，match是一个正则表达式字符串，用来过滤文件名称；recursive为bool，指定是否包含path下的子目录



默认现象参数
*null：默认False，为True时，Django在字段无数据时，将空值NULL存入数据库
*blank：默认为False，为True时，字段允许为空，即表单验证将允许输入空值，blank影响数据验证，null影响数据库存储



